/*
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * API version: latest
 * Contact: support@ory.sh
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// ProjectApiToken struct for ProjectApiToken
type ProjectApiToken struct {
	Id string `json:"id"`
	// The Token's Name  Set this to help you remember, for example, where you use the token.
	Name string `json:"name"`
	OwnerId string `json:"owner_id"`
	ProjectId *string `json:"project_id,omitempty"`
	// The token's value
	Value *string `json:"value,omitempty"`
}

// NewProjectApiToken instantiates a new ProjectApiToken object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectApiToken(id string, name string, ownerId string) *ProjectApiToken {
	this := ProjectApiToken{}
	this.Id = id
	this.Name = name
	this.OwnerId = ownerId
	return &this
}

// NewProjectApiTokenWithDefaults instantiates a new ProjectApiToken object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectApiTokenWithDefaults() *ProjectApiToken {
	this := ProjectApiToken{}
	return &this
}

// GetId returns the Id field value
func (o *ProjectApiToken) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProjectApiToken) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProjectApiToken) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ProjectApiToken) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProjectApiToken) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProjectApiToken) SetName(v string) {
	o.Name = v
}

// GetOwnerId returns the OwnerId field value
func (o *ProjectApiToken) GetOwnerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *ProjectApiToken) GetOwnerIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *ProjectApiToken) SetOwnerId(v string) {
	o.OwnerId = v
}

// GetProjectId returns the ProjectId field value if set, zero value otherwise.
func (o *ProjectApiToken) GetProjectId() string {
	if o == nil || o.ProjectId == nil {
		var ret string
		return ret
	}
	return *o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectApiToken) GetProjectIdOk() (*string, bool) {
	if o == nil || o.ProjectId == nil {
		return nil, false
	}
	return o.ProjectId, true
}

// HasProjectId returns a boolean if a field has been set.
func (o *ProjectApiToken) HasProjectId() bool {
	if o != nil && o.ProjectId != nil {
		return true
	}

	return false
}

// SetProjectId gets a reference to the given string and assigns it to the ProjectId field.
func (o *ProjectApiToken) SetProjectId(v string) {
	o.ProjectId = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ProjectApiToken) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectApiToken) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ProjectApiToken) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ProjectApiToken) SetValue(v string) {
	o.Value = &v
}

func (o ProjectApiToken) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["owner_id"] = o.OwnerId
	}
	if o.ProjectId != nil {
		toSerialize["project_id"] = o.ProjectId
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableProjectApiToken struct {
	value *ProjectApiToken
	isSet bool
}

func (v NullableProjectApiToken) Get() *ProjectApiToken {
	return v.value
}

func (v *NullableProjectApiToken) Set(val *ProjectApiToken) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectApiToken) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectApiToken) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectApiToken(val *ProjectApiToken) *NullableProjectApiToken {
	return &NullableProjectApiToken{value: val, isSet: true}
}

func (v NullableProjectApiToken) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectApiToken) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


