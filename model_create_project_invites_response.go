/*
Ory APIs

Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 

API version: v1.1.39
Contact: support@ory.sh
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CreateProjectInvitesResponse Response to the create project invite request
type CreateProjectInvitesResponse struct {
	AllInvites []ProjectInvite `json:"all_invites"`
	CreatedInvites []ProjectInvite `json:"created_invites"`
	AdditionalProperties map[string]interface{}
}

type _CreateProjectInvitesResponse CreateProjectInvitesResponse

// NewCreateProjectInvitesResponse instantiates a new CreateProjectInvitesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectInvitesResponse(allInvites []ProjectInvite, createdInvites []ProjectInvite) *CreateProjectInvitesResponse {
	this := CreateProjectInvitesResponse{}
	this.AllInvites = allInvites
	this.CreatedInvites = createdInvites
	return &this
}

// NewCreateProjectInvitesResponseWithDefaults instantiates a new CreateProjectInvitesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectInvitesResponseWithDefaults() *CreateProjectInvitesResponse {
	this := CreateProjectInvitesResponse{}
	return &this
}

// GetAllInvites returns the AllInvites field value
func (o *CreateProjectInvitesResponse) GetAllInvites() []ProjectInvite {
	if o == nil {
		var ret []ProjectInvite
		return ret
	}

	return o.AllInvites
}

// GetAllInvitesOk returns a tuple with the AllInvites field value
// and a boolean to check if the value has been set.
func (o *CreateProjectInvitesResponse) GetAllInvitesOk() ([]ProjectInvite, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllInvites, true
}

// SetAllInvites sets field value
func (o *CreateProjectInvitesResponse) SetAllInvites(v []ProjectInvite) {
	o.AllInvites = v
}

// GetCreatedInvites returns the CreatedInvites field value
func (o *CreateProjectInvitesResponse) GetCreatedInvites() []ProjectInvite {
	if o == nil {
		var ret []ProjectInvite
		return ret
	}

	return o.CreatedInvites
}

// GetCreatedInvitesOk returns a tuple with the CreatedInvites field value
// and a boolean to check if the value has been set.
func (o *CreateProjectInvitesResponse) GetCreatedInvitesOk() ([]ProjectInvite, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedInvites, true
}

// SetCreatedInvites sets field value
func (o *CreateProjectInvitesResponse) SetCreatedInvites(v []ProjectInvite) {
	o.CreatedInvites = v
}

func (o CreateProjectInvitesResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["all_invites"] = o.AllInvites
	}
	if true {
		toSerialize["created_invites"] = o.CreatedInvites
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return json.Marshal(toSerialize)
}

func (o *CreateProjectInvitesResponse) UnmarshalJSON(bytes []byte) (err error) {
	varCreateProjectInvitesResponse := _CreateProjectInvitesResponse{}

	if err = json.Unmarshal(bytes, &varCreateProjectInvitesResponse); err == nil {
		*o = CreateProjectInvitesResponse(varCreateProjectInvitesResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "all_invites")
		delete(additionalProperties, "created_invites")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateProjectInvitesResponse struct {
	value *CreateProjectInvitesResponse
	isSet bool
}

func (v NullableCreateProjectInvitesResponse) Get() *CreateProjectInvitesResponse {
	return v.value
}

func (v *NullableCreateProjectInvitesResponse) Set(val *CreateProjectInvitesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectInvitesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectInvitesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectInvitesResponse(val *CreateProjectInvitesResponse) *NullableCreateProjectInvitesResponse {
	return &NullableCreateProjectInvitesResponse{value: val, isSet: true}
}

func (v NullableCreateProjectInvitesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectInvitesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


