/*
 * Ory APIs
 *
 * Documentation for all public and administrative Ory APIs. Administrative APIs can only be accessed with a valid Personal Access Token. Public APIs are mostly used in browsers. 
 *
 * API version: latest
 * Contact: support@ory.sh
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package client

import (
	"encoding/json"
)

// CreateProjectResponse struct for CreateProjectResponse
type CreateProjectResponse struct {
	Id string `json:"id"`
	// The Slug of the project
	Slug string `json:"slug"`
}

// NewCreateProjectResponse instantiates a new CreateProjectResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateProjectResponse(id string, slug string) *CreateProjectResponse {
	this := CreateProjectResponse{}
	this.Id = id
	this.Slug = slug
	return &this
}

// NewCreateProjectResponseWithDefaults instantiates a new CreateProjectResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateProjectResponseWithDefaults() *CreateProjectResponse {
	this := CreateProjectResponse{}
	return &this
}

// GetId returns the Id field value
func (o *CreateProjectResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CreateProjectResponse) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CreateProjectResponse) SetId(v string) {
	o.Id = v
}

// GetSlug returns the Slug field value
func (o *CreateProjectResponse) GetSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Slug
}

// GetSlugOk returns a tuple with the Slug field value
// and a boolean to check if the value has been set.
func (o *CreateProjectResponse) GetSlugOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Slug, true
}

// SetSlug sets field value
func (o *CreateProjectResponse) SetSlug(v string) {
	o.Slug = v
}

func (o CreateProjectResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["slug"] = o.Slug
	}
	return json.Marshal(toSerialize)
}

type NullableCreateProjectResponse struct {
	value *CreateProjectResponse
	isSet bool
}

func (v NullableCreateProjectResponse) Get() *CreateProjectResponse {
	return v.value
}

func (v *NullableCreateProjectResponse) Set(val *CreateProjectResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateProjectResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateProjectResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateProjectResponse(val *CreateProjectResponse) *NullableCreateProjectResponse {
	return &NullableCreateProjectResponse{value: val, isSet: true}
}

func (v NullableCreateProjectResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateProjectResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


